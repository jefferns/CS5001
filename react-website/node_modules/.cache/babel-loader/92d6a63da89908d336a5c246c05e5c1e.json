{"ast":null,"code":"// import { useState, useEffect } from \"react\"\n// import axios from \"axios\"\n// export default function useAuth(code) {\n//   const [accessToken, setAccessToken] = useState()\n//   const [refreshToken, setRefreshToken] = useState()\n//   const [expiresIn, setExpiresIn] = useState()\n//   useEffect(() => {\n//     // Token creation\n//     console.log('login');\n//     axios\n//       .post(\"http://localhost:3001/login\", {\n//         code,\n//       })\n//       .then(res => {\n//         setAccessToken(res.data.accessToken)\n//         setRefreshToken(res.data.refreshToken)\n//         setExpiresIn(res.data.expiresIn)\n//         window.history.pushState({}, null, \"/\")\n//       })\n//       .catch(() => {\n//         window.location = \"/\"\n//       })\n//   }, [code])\n//   useEffect(() => {\n//     // Token Refresh\n//     if (!refreshToken || !expiresIn) return\n//     // call for refresh 1 minute before token expiration\n//     const interval = setInterval(() => {\n//       axios\n//         .post(\"http://localhost:3001/refresh\", {\n//           refreshToken,\n//         })\n//         .then(res => {\n//           setAccessToken(res.data.accessToken)\n//           setExpiresIn(res.data.expiresIn)\n//         })\n//         .catch(() => {\n//           window.location = \"/\"\n//         })\n//     }, (expiresIn - 60) * 1000)\n//     return () => clearInterval(interval)\n//   }, [refreshToken, expiresIn])\n//   return accessToken\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Nick/Desktop/Fall 2022/CS5001/react-website/src/components/useAuth.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useState, useEffect } from \"react\"\r\n// import axios from \"axios\"\r\n\r\n// export default function useAuth(code) {\r\n//   const [accessToken, setAccessToken] = useState()\r\n//   const [refreshToken, setRefreshToken] = useState()\r\n//   const [expiresIn, setExpiresIn] = useState()\r\n\r\n//   useEffect(() => {\r\n//     // Token creation\r\n//     console.log('login');\r\n//     axios\r\n//       .post(\"http://localhost:3001/login\", {\r\n//         code,\r\n//       })\r\n//       .then(res => {\r\n//         setAccessToken(res.data.accessToken)\r\n//         setRefreshToken(res.data.refreshToken)\r\n//         setExpiresIn(res.data.expiresIn)\r\n//         window.history.pushState({}, null, \"/\")\r\n//       })\r\n//       .catch(() => {\r\n//         window.location = \"/\"\r\n//       })\r\n//   }, [code])\r\n\r\n//   useEffect(() => {\r\n//     // Token Refresh\r\n//     if (!refreshToken || !expiresIn) return\r\n//     // call for refresh 1 minute before token expiration\r\n//     const interval = setInterval(() => {\r\n//       axios\r\n//         .post(\"http://localhost:3001/refresh\", {\r\n//           refreshToken,\r\n//         })\r\n//         .then(res => {\r\n//           setAccessToken(res.data.accessToken)\r\n//           setExpiresIn(res.data.expiresIn)\r\n//         })\r\n//         .catch(() => {\r\n//           window.location = \"/\"\r\n//         })\r\n//     }, (expiresIn - 60) * 1000)\r\n\r\n//     return () => clearInterval(interval)\r\n//   }, [refreshToken, expiresIn])\r\n\r\n//   return accessToken\r\n// }"],"mappings":"AAmDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}