{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\Fall 2022\\\\CS5001\\\\react-website\\\\src\\\\components\\\\Login.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client_id = '534b84117d9849018758b2f1688ea8fa';\nconst client_secret = '8ce5dbf26b9547758c42311ae74f38ba';\nconst redirect_URI = 'http://localhost:3000';\nconst scopes = ['streaming', 'user-top-read', 'playlist-modify-public', 'user-library-modify', 'user-modify-playback-state'];\nconst API_URL = 'https://accounts.spotify.com/api';\nconst AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${redirect_URI}&scope=${scopes.join('%20')}&response_type=code&show_dialog=true`; // export const getAuthTokens = (hash) => {\n//   // Returns object of each parameter in the URL after Auth\n//   const stringAfterHash = hash.substring(1);\n//   const paramsInUrl = stringAfterHash.split('&');\n//   const tokens = paramsInUrl.map((param) => {\n//     return param.split('=');\n//   });\n//   const tokenObj = {};\n//   tokens.forEach((pair) => {\n//     tokenObj[pair[0]] = pair[1]\n//   });\n//   return tokenObj;\n// };\n\nvar request = require('request');\n\nexport const fetchAccessTokens = async code => {\n  // const result = await fetch(API_URL + '/token', {\n  //   method: 'POST',\n  //   headers: {\n  //     'Authorization': 'Basic ' + window.btoa(client_id + \":\" + client_secret),\n  //     \"Content-Type\": \"application/x-www-form-urlencoded\",\n  //   },\n  //   form: {\n  //     // 'grant_type': 'authorization_code',\n  //     grant_type: 'client_credentials'\n  //   },\n  //   data: {\n  //     'code': code,\n  //     'redirect_uri': redirect_URI,\n  //     'client_id': client_id,\n  //     'client_secret': client_secret,\n  //   },\n  // });\n  var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n      'Authorization': 'Basic ' + new Buffer(client_id + ':' + client_secret).toString('base64')\n    },\n    form: {\n      grant_type: 'client_credentials'\n    },\n    json: true\n  };\n  request.post(authOptions, function (error, response, body) {\n    if (!error && response.statusCode === 200) {\n      var x = body.access_token;\n      console.log(x);\n    }\n  });\n  console.log(result);\n};\nexport default function Login() {\n  const handleLogin = () => {\n    window.location = AUTH_URL;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn login-btn\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Log in with Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","client_id","client_secret","redirect_URI","scopes","API_URL","AUTH_URL","join","request","require","fetchAccessTokens","code","authOptions","url","headers","Buffer","toString","form","grant_type","json","post","error","response","body","statusCode","x","access_token","console","log","result","Login","handleLogin","window","location"],"sources":["C:/Users/Nick/Desktop/Fall 2022/CS5001/react-website/src/components/Login.jsx"],"sourcesContent":["import React from 'react';\n\n\nconst client_id = '534b84117d9849018758b2f1688ea8fa';\nconst client_secret = '8ce5dbf26b9547758c42311ae74f38ba';\nconst redirect_URI = 'http://localhost:3000';\nconst scopes = [\n  'streaming',\n  'user-top-read',\n  'playlist-modify-public',\n  'user-library-modify',\n  'user-modify-playback-state',\n];\n\nconst API_URL = 'https://accounts.spotify.com/api';\nconst AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${redirect_URI}&scope=${scopes.join('%20')}&response_type=code&show_dialog=true`\n\n\n// export const getAuthTokens = (hash) => {\n//   // Returns object of each parameter in the URL after Auth\n//   const stringAfterHash = hash.substring(1);\n//   const paramsInUrl = stringAfterHash.split('&');\n//   const tokens = paramsInUrl.map((param) => {\n//     return param.split('=');\n//   });\n//   const tokenObj = {};\n//   tokens.forEach((pair) => {\n//     tokenObj[pair[0]] = pair[1]\n//   });\n//   return tokenObj;\n// };\n\n\nvar request = require('request');\n\n\nexport const fetchAccessTokens = async (code) => {\n  // const result = await fetch(API_URL + '/token', {\n  //   method: 'POST',\n  //   headers: {\n  //     'Authorization': 'Basic ' + window.btoa(client_id + \":\" + client_secret),\n  //     \"Content-Type\": \"application/x-www-form-urlencoded\",\n  //   },\n  //   form: {\n  //     // 'grant_type': 'authorization_code',\n  //     grant_type: 'client_credentials'\n  //   },\n  //   data: {\n  //     'code': code,\n  //     'redirect_uri': redirect_URI,\n  //     'client_id': client_id,\n  //     'client_secret': client_secret,\n  //   },\n  // });\n  var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n      'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n    },\n    form: {\n      grant_type: 'client_credentials'\n    },\n    json: true\n  };\n  \n  request.post(authOptions, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      var x = body.access_token;\n      console.log(x);\n    }\n  })\n  console.log(result);\n}\n\n\nexport default function Login() {\n  const handleLogin = () => {\n    window.location = AUTH_URL;\n  };\n\n  return (\n    <div className='btn login-btn'>\n      <h1>Welcome!</h1>\n      <button onClick={ handleLogin }>\n        Log in with Spotify\n      </button>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GAAG,kCAAlB;AACA,MAAMC,aAAa,GAAG,kCAAtB;AACA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,MAAM,GAAG,CACb,WADa,EAEb,eAFa,EAGb,wBAHa,EAIb,qBAJa,EAKb,4BALa,CAAf;AAQA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,QAAQ,GAAI,oDAAmDL,SAAU,iBAAgBE,YAAa,UAASC,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAmB,sCAAxI,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAGA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAP,IAAgB;EAC/C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIC,WAAW,GAAG;IAChBC,GAAG,EAAE,wCADW;IAEhBC,OAAO,EAAE;MACP,iBAAiB,WAAY,IAAIC,MAAJ,CAAWd,SAAS,GAAG,GAAZ,GAAkBC,aAA7B,EAA4Cc,QAA5C,CAAqD,QAArD;IADtB,CAFO;IAKhBC,IAAI,EAAE;MACJC,UAAU,EAAE;IADR,CALU;IAQhBC,IAAI,EAAE;EARU,CAAlB;EAWAX,OAAO,CAACY,IAAR,CAAaR,WAAb,EAA0B,UAASS,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;IACxD,IAAI,CAACF,KAAD,IAAUC,QAAQ,CAACE,UAAT,KAAwB,GAAtC,EAA2C;MACzC,IAAIC,CAAC,GAAGF,IAAI,CAACG,YAAb;MACAC,OAAO,CAACC,GAAR,CAAYH,CAAZ;IACD;EACF,CALD;EAMAE,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACD,CApCM;AAuCP,eAAe,SAASC,KAAT,GAAiB;EAC9B,MAAMC,WAAW,GAAG,MAAM;IACxBC,MAAM,CAACC,QAAP,GAAkB3B,QAAlB;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAGyB,WAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;KAbuBD,K"},"metadata":{},"sourceType":"module"}