{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\Fall 2022\\\\CS5001\\\\react-website\\\\src\\\\components\\\\Reccomendations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getReccomendations } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reccomendations = _ref => {\n  _s();\n  let {\n    seeds,\n    token\n  } = _ref;\n  const [reccomendations, setReccomendations] = useState([]);\n  useEffect(() => {\n    if (!seeds) return;\n    getReccomendations(seeds).then(response => response.json()).then(response => {\n      console.log('response in get Reccomendations: ', response);\n      setReccomendations(response.tracks);\n    });\n  }, [seeds]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [seeds.length, reccomendations.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rec-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reccomendations: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), reccomendations.map(reccomendation => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rec-item\",\n        children: reccomendation.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true);\n};\n_s(Reccomendations, \"ClsEGSyBOi1VA4HI2SWydWQAmps=\");\n_c = Reccomendations;\nexport default Reccomendations;\nvar _c;\n$RefreshReg$(_c, \"Reccomendations\");","map":{"version":3,"names":["React","useState","useEffect","getReccomendations","Reccomendations","seeds","token","reccomendations","setReccomendations","then","response","json","console","log","tracks","length","map","reccomendation","name"],"sources":["C:/Users/Nick/Desktop/Fall 2022/CS5001/react-website/src/components/Reccomendations.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getReccomendations } from '../api';\r\n\r\n\r\nconst Reccomendations = ({seeds, token}) => {\r\n  const [reccomendations, setReccomendations] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    if(!seeds) return;\r\n    getReccomendations(seeds)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      console.log('response in get Reccomendations: ', response);\r\n      setReccomendations(response.tracks);\r\n    });\r\n  }, [seeds])\r\n\r\n  return(\r\n  <>\r\n    {seeds.length\r\n    \r\n\r\n    }\r\n    {reccomendations.length\r\n    ? <div className=\"rec-container\">\r\n        <h3>Reccomendations: </h3>\r\n        {reccomendations.map(reccomendation => \r\n          <div className='rec-item'>\r\n            {reccomendation.name}\r\n          </div>\r\n        )}\r\n      </div>\r\n    : null\r\n    }\r\n  </>\r\n  )\r\n}\r\n \r\nexport default Reccomendations;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,kBAAkB,QAAQ,QAAQ;AAAC;AAAA;AAG5C,MAAMC,eAAe,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAACC,KAAK;IAAEC;EAAK,CAAC;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAI;IACZ,IAAG,CAACG,KAAK,EAAE;IACXF,kBAAkB,CAACE,KAAK,CAAC,CACxBI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MAChBE,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,QAAQ,CAAC;MAC1DF,kBAAkB,CAACE,QAAQ,CAACI,MAAM,CAAC;IACrC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACA;IAAA,WACGA,KAAK,CAACU,MAAM,EAIZR,eAAe,CAACQ,MAAM,gBACrB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,EACzBR,eAAe,CAACS,GAAG,CAACC,cAAc,iBACjC;QAAK,SAAS,EAAC,UAAU;QAAA,UACtBA,cAAc,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAChB,CACP;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,GACN,IAAI;EAAA,gBAEL;AAEL,CAAC;AAAA,GAhCKd,eAAe;AAAA,KAAfA,eAAe;AAkCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}