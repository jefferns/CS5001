{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\Fall 2022\\\\CS5001\\\\react-website\\\\src\\\\components\\\\Player.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Player(_ref) {\n  _s();\n\n  let {\n    token,\n    track\n  } = _ref;\n  const [player, setPlayer] = useState(undefined);\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [current_track, setTrack] = useState(track); // This useEffect is pulled from Spotify's Developer Documentaion Examples\n  // https://developer.spotify.com/documentation/web-playback-sdk/guide/#react-components\n\n  onSpotifyWebPlaybackSDKReady;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: is_active ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: current_track.album.images[0].url,\n        className: \"now-playing__cover\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"now-playing__side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"now-playing__name\",\n          children: current_track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"now-playing__artist\",\n          children: current_track.artists[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playback-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-spotify\",\n          onClick: () => {\n            player.previousTrack();\n          },\n          children: \"<<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-spotify\",\n          onClick: () => {\n            player.togglePlay();\n          },\n          children: is_paused ? \"PLAY\" : \"PAUSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-spotify\",\n          onClick: () => {\n            player.nextTrack();\n          },\n          children: \">>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" No Spotify Player instance \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"goIRD3QV5kvt/lsOSSSBFuvPjBk=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","Player","token","track","player","setPlayer","undefined","is_paused","setPaused","is_active","setActive","current_track","setTrack","onSpotifyWebPlaybackSDKReady","album","images","url","name","artists","previousTrack","togglePlay","nextTrack"],"sources":["C:/Users/Nick/Desktop/Fall 2022/CS5001/react-website/src/components/Player.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Player({token, track}) {\r\n\r\n  const [player, setPlayer] = useState(undefined);\r\n  const [is_paused, setPaused] = useState(false);\r\n  const [is_active, setActive] = useState(false);\r\n  const [current_track, setTrack] = useState(track);\r\n\r\n  // This useEffect is pulled from Spotify's Developer Documentaion Examples\r\n  // https://developer.spotify.com/documentation/web-playback-sdk/guide/#react-components\r\n  onSpotifyWebPlaybackSDKReady \r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {is_active ? \r\n      <div className=\"main-wrapper\">\r\n        <img src={current_track.album.images[0].url} \r\n            className=\"now-playing__cover\" alt=\"\" \r\n        />\r\n        <div className=\"now-playing__side\">\r\n          <div className=\"now-playing__name\">\r\n            {current_track.name}\r\n          </div>\r\n          <div className=\"now-playing__artist\">\r\n            {current_track.artists[0].name}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"playback-wrapper\">\r\n          <button className=\"btn-spotify\" onClick={() => { player.previousTrack() }} >\r\n            &lt;&lt;\r\n          </button>\r\n          <button className=\"btn-spotify\" onClick={() => { player.togglePlay() }} >\r\n            { is_paused ? \"PLAY\" : \"PAUSE\" }\r\n          </button>\r\n          <button className=\"btn-spotify\" onClick={() => { player.nextTrack() }} >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      : <div className='container'>\r\n          <b> No Spotify Player instance </b>\r\n        </div>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,MAAT,OAAgC;EAAA;;EAAA,IAAhB;IAACC,KAAD;IAAQC;EAAR,CAAgB;EAE9B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACO,SAAD,CAApC;EACA,MAAM,CAACC,SAAD,EAAYC,SAAZ,IAAyBT,QAAQ,CAAC,KAAD,CAAvC;EACA,MAAM,CAACU,SAAD,EAAYC,SAAZ,IAAyBX,QAAQ,CAAC,KAAD,CAAvC;EACA,MAAM,CAACY,aAAD,EAAgBC,QAAhB,IAA4Bb,QAAQ,CAACI,KAAD,CAA1C,CAL8B,CAO9B;EACA;;EACAU,4BAA4B;EAG5B,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACGJ,SAAS,gBACV;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAK,GAAG,EAAEE,aAAa,CAACG,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,GAAxC;QACI,SAAS,EAAC,oBADd;QACmC,GAAG,EAAC;MADvC;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,mBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,mBAAf;UAAA,UACGL,aAAa,CAACM;QADjB;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAK,SAAS,EAAC,qBAAf;UAAA,UACGN,aAAa,CAACO,OAAd,CAAsB,CAAtB,EAAyBD;QAD5B;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAaE;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAQ,SAAS,EAAC,aAAlB;UAAgC,OAAO,EAAE,MAAM;YAAEb,MAAM,CAACe,aAAP;UAAwB,CAAzE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAQ,SAAS,EAAC,aAAlB;UAAgC,OAAO,EAAE,MAAM;YAAEf,MAAM,CAACgB,UAAP;UAAqB,CAAtE;UAAA,UACIb,SAAS,GAAG,MAAH,GAAY;QADzB;UAAA;UAAA;UAAA;QAAA,QAJF,eAOE;UAAQ,SAAS,EAAC,aAAlB;UAAgC,OAAO,EAAE,MAAM;YAAEH,MAAM,CAACiB,SAAP;UAAoB,CAArE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QADU,gBA0BR;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EA3BJ;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD;;GA9CQpB,M;;KAAAA,M;AAgDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}