{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\Fall 2022\\\\CS5001\\\\react-website\\\\src\\\\components\\\\Player.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getAvailableDevices } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Player(_ref) {\n  _s();\n\n  let {\n    token,\n    track\n  } = _ref;\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [media_player, setPlayer] = useState(undefined);\n  const [current_track, setTrack] = useState(track);\n\n  const findAvailableDevices = () => {\n    getAvailableDevices(token).then(response => response.json()).then(response => {\n      console.log('response of devices: ', response);\n    });\n  }; // This useEffect is pulled from Spotify's Developer Documentaion Examples\n  // https://developer.spotify.com/documentation/web-playback-sdk/guide/#react-components\n\n\n  useEffect(() => {\n    if (!token) return;\n    if (!track.name) return;\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'Web Playback SDK',\n        getOAuthToken: cb => {\n          cb(token);\n        },\n        volume: 0.5\n      });\n\n      if (!player) {\n        console.log('something went wrong with player initialization...');\n        return;\n      }\n\n      setPlayer(player);\n      player.addListener('ready', () => {\n        setActive(true);\n      });\n      player.addListener('not_ready', () => {\n        setActive(false);\n      });\n      player.addListener('player_state_changed', state => {\n        if (!state) return;\n        setTrack(state.track_window.current_track);\n        setPaused(state.paused);\n        player.getCurrentState().then(state => {\n          !state ? setActive(false) : setActive(true);\n        });\n      });\n      player.connect().then(success => {\n        if (success) {\n          console.log('The Web Playback SDK successfully connected to Spotify!'); // set the current device to spotify's active device\n\n          findAvailableDevices(token);\n          setActiveDevice();\n        }\n      });\n    };\n  }, [token, track]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: is_active ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: current_track.album.images[0].url,\n        className: \"now-playing__cover\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"now-playing__side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"now-playing__name\",\n          children: current_track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"now-playing__artist\",\n          children: current_track.artists[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playback-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-spotify\",\n          onClick: () => {\n            media_player.previousTrack();\n          },\n          children: \"<<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-spotify\",\n          onClick: () => {\n            media_player.togglePlay();\n          },\n          children: is_paused ? \"PLAY\" : \"PAUSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-spotify\",\n          onClick: () => {\n            media_player.nextTrack();\n          },\n          children: \">>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" No Spotify Player instance \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"8O7sCiCsdTYLJsEfX27nvJG9BUM=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","getAvailableDevices","Player","token","track","is_paused","setPaused","is_active","setActive","media_player","setPlayer","undefined","current_track","setTrack","findAvailableDevices","then","response","json","console","log","name","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","player","Spotify","getOAuthToken","cb","volume","addListener","state","track_window","paused","getCurrentState","connect","success","setActiveDevice","album","images","url","artists","previousTrack","togglePlay","nextTrack"],"sources":["C:/Users/Nick/Desktop/Fall 2022/CS5001/react-website/src/components/Player.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAvailableDevices } from '../api';\r\n\r\nfunction Player({token, track}) {\r\n\r\n  const [is_paused, setPaused] = useState(false);\r\n  const [is_active, setActive] = useState(false);\r\n  const [media_player, setPlayer] = useState(undefined);\r\n  const [current_track, setTrack] = useState(track);\r\n\r\n  const findAvailableDevices = () => {\r\n    getAvailableDevices(token)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      console.log('response of devices: ', response);\r\n    });\r\n  }\r\n\r\n\r\n  // This useEffect is pulled from Spotify's Developer Documentaion Examples\r\n  // https://developer.spotify.com/documentation/web-playback-sdk/guide/#react-components\r\n  useEffect(() => {\r\n    if(!token) return;\r\n    if(!track.name) return;\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n    script.async = true;\r\n\r\n    document.body.appendChild(script);\r\n\r\n    window.onSpotifyWebPlaybackSDKReady = () => {\r\n\r\n      const player = new window.Spotify.Player({\r\n        name: 'Web Playback SDK',\r\n        getOAuthToken: cb => { cb(token); },\r\n        volume: 0.5\r\n      });\r\n\r\n      if(!player) {\r\n        console.log('something went wrong with player initialization...');\r\n        return;\r\n      }\r\n      setPlayer(player);\r\n\r\n      player.addListener('ready', () => {\r\n        setActive(true);\r\n      });\r\n\r\n      player.addListener('not_ready', () => {\r\n        setActive(false);\r\n      });\r\n\r\n      player.addListener('player_state_changed', ( state => {\r\n        if (!state) return;\r\n        setTrack(state.track_window.current_track);\r\n        setPaused(state.paused);\r\n\r\n        player.getCurrentState().then( state => { \r\n          (!state)? setActive(false) : setActive(true) \r\n        });\r\n      }));\r\n\r\n      player.connect().then(success => {\r\n        if (success) {\r\n          console.log('The Web Playback SDK successfully connected to Spotify!');\r\n          // set the current device to spotify's active device\r\n          findAvailableDevices(token);\r\n          setActiveDevice()\r\n        }\r\n      })\r\n    };\r\n  }, [token, track]);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {is_active ? \r\n      <div className=\"main-wrapper\">\r\n        <img src={current_track.album.images[0].url} \r\n            className=\"now-playing__cover\" alt=\"\" \r\n        />\r\n        <div className=\"now-playing__side\">\r\n          <div className=\"now-playing__name\">\r\n            {current_track.name}\r\n          </div>\r\n          <div className=\"now-playing__artist\">\r\n            {current_track.artists[0].name}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"playback-wrapper\">\r\n          <button className=\"btn-spotify\" onClick={() => { media_player.previousTrack() }} >\r\n            &lt;&lt;\r\n          </button>\r\n          <button className=\"btn-spotify\" onClick={() => { media_player.togglePlay() }} >\r\n            { is_paused ? \"PLAY\" : \"PAUSE\" }\r\n          </button>\r\n          <button className=\"btn-spotify\" onClick={() => { media_player.nextTrack() }} >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      : <div className='container'>\r\n          <b> No Spotify Player instance </b>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player"],"mappings":"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"},"metadata":{},"sourceType":"module"}